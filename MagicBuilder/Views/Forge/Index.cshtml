@model MagicBuilder.ViewModels.ForgeViewModel
@using System.Linq

@{
    ViewBag.Title = "Search for cards";
}

<h2 class="text-center">Welcome to Magic deck forge</h2>
<div class="well">
    <p class="text-center">
        To build a deck you can make use of our card search, howering a card gives you the option
        of adding it to a deck.
    </p>
</div>

<div class="panel panel-default">
    <div class="panel-heading" role="tab" id="currentDeckHeading">
        <h4 class="panel-title text-center">
            <a data-toggle="collapse" href="#availableDecks" aria-expanded="true" aria-controls="availableDecks">
                Available decks
            </a>
        </h4>
    </div>
    <div id="availableDecks" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="availableDecksHeading">
        <div class="panel-body">
            <div role="tabpanel">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="@(@Model.CurrentDeck == null ? "active" : "")">
                        <a href="#create-deck" aria-controls="create-deck" role="tab" data-toggle="tab">Create deck</a>
                    </li>
                    @foreach (var deck in Model.Decks)
                    {
                        <li role="presentation" class="@(@Model.CurrentDeck != null && @Model.CurrentDeck.DeckID == deck.DeckID ? "active" : "")">
                            <a href="#deck-@deck.DeckID" aria-controls="deck-@deck.DeckID" role="tab" data-toggle="tab">@deck.Name</a>
                        </li>
                    }
                </ul>

                <!-- Tab panes -->
                <div class="row center-block voffset5">
                    <div class="col-md-offset-2 col-md-8">
                        <div class="tab-content">

                            <div role="tabpanel" class="tab-pane active" id="create-deck">
                                @using (Html.BeginForm("CreateDeck", "Forge", FormMethod.Post, new { @class = "bs-component" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-group">
                                        <div class="input-group">
                                            @Html.Label("deckName", new { @class = "sr-only" })
                                            <input name="deckName" type="text" class="form-control">
                                            <span class="input-group-btn">
                                                <button class="btn btn-primary" type="submit">Create</button>
                                            </span>
                                        </div>
                                    </div>
                                }
                            </div>

                            @foreach (var deck in Model.Decks)
                            {
                                <div role="tabpanel" class="tab-pane" id="deck-@deck.DeckID">
                                    <div class="row">
                                        @using (Html.BeginForm("RenameDeck", "Forge", FormMethod.Post, new { @class = "col-md-12 voffset2" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <div class="form-group">
                                                <div class="input-group">
                                                    @Html.HiddenFor(m => deck.DeckID)
                                                    @Html.LabelFor(m => deck.Name, new { @class = "sr-only" })
                                                    @Html.TextBoxFor(m => deck.Name, new { @class = "form-control" })
                                                    <span class="input-group-btn">
                                                        <button class="btn btn-warning" type="submit">Rename</button>
                                                    </span>
                                                </div>
                                            </div>
                                        }
                                        @using (Html.BeginForm("SelectDeck", "Forge", FormMethod.Get, new { @class = "col-sm-6 col-md-3 voffset2" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input name="deckId" type="hidden" class="form-control" value="@deck.DeckID">
                                            <button class="btn btn-primary btn-block" type="submit">Select deck</button>
                                        }
                                        @using (Html.BeginForm("DeleteDeck", "Forge", FormMethod.Post, new { @class = "col-sm-6 col-md-3 voffset2" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input name="deckId" type="hidden" class="form-control" value="@deck.DeckID">
                                            <button class="btn btn-danger btn-block" type="submit">Delete</button>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.CurrentDeck != null)
{
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="currentDeckHeading">
            <h4 class="panel-title text-center">
                <a data-toggle="collapse" href="#currentDeck" aria-expanded="true" aria-controls="currentDeck">
                    Current deck : @Model.CurrentDeck.Name
                </a>
            </h4>
        </div>
        <div id="currentDeck" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="currentDeckHeading">
            <div class="panel-body">
                <div class="row cards">
                    @foreach (var card in Model.CurrentCards)
                    {
                        <div class="card col-sm-4 col-md-3">
                            <div class="flip-container" ontouchstart="this.classList.toggle('hover');">
                                <div class="flipper">
                                    <div class="front">
                                        <img class="card-image"
                                             src="@Html.Raw(card.ImageHiRes)"
                                             alt="Card Image" />
                                    </div>
                                    <div class="back card-back">
                                        @using (Html.BeginForm("RemoveCard", "Forge", FormMethod.Post, new { @class = "remove-card" }))
                                        {
                                            @Html.AntiForgeryToken()
                                            <input name="cardId" type="hidden" value="@card.Id" />
                                            <input name="deckId" type="hidden" value="@Model.CurrentDeck.DeckID" />
                                            <button type="submit" class="btn btn-primary add-button btn-block voffset2">
                                                Remove from deck
                                            </button>
                                        }
                                        @Html.Partial("../Partials/_CardDetails", card)
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
}


<div class="panel panel-default">
    <div class="panel-heading" role="tab" id="searchHeading">
        <h4 class="panel-title text-center">
            <a data-toggle="collapse" href="#cardSearch" aria-expanded="true" aria-controls="cardSearch">
                Search for cards
            </a>
        </h4>
    </div>
    <div id="cardSearch" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="searchHeading">
        <div class="panel-body">
            @using (Html.BeginForm("Search", "Forge", FormMethod.Get))
            {
                @Html.Partial("../Partials/_SearchForm")
            }

            @if (Model.SearchResults != null)
            {
                <h3 class="sr-only">Search results</h3>
                <div class="row cards">
                    @foreach (var card in Model.SearchResults)
                    {
                        <div class="card col-sm-4 col-md-3">
                            <div class="flip-container" ontouchstart="this.classList.toggle('hover');">
                                <div class="flipper">
                                    <div class="front">
                                        <img class="card-image"
                                             src="@card.CardImage"
                                             alt="Card Image" />
                                    </div>
                                    <div class="back card-back">
                                        @if (Model.CurrentDeck != null)
                                        {
                                            using (Html.BeginForm("AddCard", "Forge", FormMethod.Post, new { @class = "add-card" }))
                                            {
                                                @Html.AntiForgeryToken()
                                                <input name="cardId" type="hidden" value="@card.Id" />
                                                <input name="deckId" type="hidden" value="@Model.CurrentDeck.DeckID" />
                                                <button type="submit" class="btn btn-primary add-button btn-block voffset2">
                                                    Add Card to Deck
                                                </button>
                                            }
                                        }

                                        @Html.Partial("../Partials/_CardDetails", card)
                                    </div>
                                </div>
                            </div>
                        </div>


                    }
                </div>
            }
        </div>
    </div>
</div>
